# implementation of card game - Memory

import simplegui
import random

def new_game():
    global deck_cards, exposed, turns, state, click1, click2
    
    deck_cards = [i%8 for i in range(16)]
    random.shuffle(deck_cards)  
    
    exposed = [False for i in range(16)]
    
    turns, state, click1, click2 = 0, 0, 0, 0
    label.set_text("Turns = " + str(turns))
         
# define event handlers
def mouseclick(pos):
    global state, exposed, click1, click2, turns
    index = int(pos[0] // 50)
    if not exposed[index]:
        exposed[index] = True
    
        if state == 0:
            state = 1
            click1 = index
        elif state == 1:
            state = 2
            click2 = index
            turns += 1
            label.set_text("Turns = " + str(turns))
        elif state == 2:
            if deck_cards[click1] != deck_cards[click2]:
                exposed[click1], exposed[click2] = False, False
            state = 1
            click1 = index
                        
# cards are logically 50x100 pixels in size    
def draw(canvas):
    for i in range(16):
        if exposed[i]:
            canvas.draw_text(str(deck_cards[i]),(50*i+15,60),40,"Pink")
        else:
            canvas.draw_polygon([(50*i, 0), (50*i, 100), (50*i + 50, 100), (50*i + 50, 0)], 2, "White", "Green")


# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


# Always remember to review the grading rubric
